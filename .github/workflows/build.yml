# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json

name: Build app

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - "*"
    paths-ignore:
      - "*.md"
      - "*.txt"
      - .editorconfig
      - ".github/**"
      - .gitignore
  pull_request:
    branches:
      - main
    paths-ignore:
      - "**.md"

jobs:
  build_linux:
    name: Build application (Linux)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-unknown-linux-musl
          override: true
          components: clippy, rustfmt
      - name: Check format
        run: cargo fmt --check
      - name: Check clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Rust and docker image
        if: success() && github.ref == 'refs/heads/main'
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          cargo install cross toml-cli
          just release_linux
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Rust and build and push docker image
        if: success() && github.ref != 'refs/heads/main'
        run: |
          cargo install cross toml-cli
          just docker_build_linux
      - run: docker logout || true
        if: always()

  build_windows:
    name: Build application (Windows)
    runs-on: windows-2019
    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-gnu
          override: true
          components: clippy, rustfmt
      - name: Check format
        run: cargo fmt --check
      - name: Check clippy
        uses: actions-rs/clippy-check@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          args: --all-features
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Build Rust and docker image
        if: success() && github.ref == 'refs/heads/main'
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          just release_windows
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - name: Build Rust and build and push docker image
        if: success() && github.ref != 'refs/heads/main'
        run: |
          cargo install cross toml-cli
          just docker_build_windows
      - run: docker logout
        if: always()

  release_multiarch:
    name: Release multiarch image
    runs-on: ubuntu-latest
    needs: [build_linux, build_windows]
    if: success() && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v2
      - uses: extractions/setup-just@v1
      - name: Release multiarch image to Docker hub
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          just release_with_docker_only
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      - run: docker logout || true
        if: always()
